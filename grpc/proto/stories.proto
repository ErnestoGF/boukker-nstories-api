syntax = "proto3";

package stories;

option go_package = "github.com/ErnestoGF/boukker-nstories-api/grpc/go/v2/storiespb";

import "google/protobuf/empty.proto";

import "commons.proto";
import "chapters.proto";


service stories {
  // ================= stories ================= //

  // WriteStory ...
  rpc WriteStory(RequestWriteStory) returns (ResponseID);

  // RemoveStory ...
  rpc RemoveStory(RequestRemoveStory) returns (google.protobuf.Empty);

  // EditStory actualiza los datos de la historia
  rpc EditStory(RequestEditStory) returns (google.protobuf.Empty);

  // === commons story and chapters === //

  // ChangeStatus cambia el estado de la historia y/o capitulos.
  // 
  // Acciones:
  // * Cambia el estado de la historia y todos sus capitulos si ChaptersID esta vacio.
  // * Cambia el estado de los capitulos q vienen en ChaptersID y si corresponde tambien se cambiara el estado de la historia.
  rpc ChangeStatus(RequestChangeStoryStatus) returns (google.protobuf.Empty);

  // ChangeCover cambia el cover a  la historia y/o capitulos segun los datos de la peticion
  rpc ChangeCover(RequestChangeCover) returns (google.protobuf.Empty);

  // ================= chapters ================= //

  // WriteChapter ...
  rpc WriteChapter(RequestWriteChapter) returns (ResponseID);
  
  // ReorderChapters ...
  rpc ReorderChapters(RequestReorderChapters) returns (google.protobuf.Empty);

  // RemoveChapter ...
  rpc RemoveChapter(RequestRemoveChapter) returns (google.protobuf.Empty);

  // RemoveChapterCover ...
  rpc RemoveChapterCover(RequestRemoveChapterCover) returns (google.protobuf.Empty);

}

// ================= requests ================= //

// RequestWriteStory ...
message RequestWriteStory {
  string Title = 1;
  string Author = 2;
  bool IsMy = 3;
  repeated string Tags = 4;
  string CategoryID = 5;
  string LanguageID = 6;
  string TokenCover = 7;

  repeated string Characters = 8;

  AudienceType Audience = 9;
  CopyrightType Copyright = 10;
  ClasificationType Clasification = 11;
  CommentModerationType CommentsModeration = 12;

  string Description  = 13;
}

// RequestEditStory ...
message RequestEditStory {
  string Title = 1;
  repeated string Tags = 2;
  string CategoryID = 3;
  string TokenCover = 4;

  repeated string Characters = 5;

  AudienceType Audience = 6;
  CopyrightType Copyright = 7;
  ClasificationType Clasification = 8;
  CommentModerationType CommentsModeration = 9;

  string Description  = 10;
}

// RequestChangeStoryStatus ...
message RequestChangeStoryStatus {
  string ID = 1;
  repeated string ChaptersID = 2;
  StatusType Status = 3;
}

// RequestRemoveStory ...
message RequestRemoveStory{
  string ID = 1;
}

// RequestChangeCover cambiar el cover de la historia o el capitulo segun el destino del cover
message RequestChangeCover {
  enum Dst {
    IGNORE = 0;
    STORY = 1;
    CHAPTER = 2;
  }
  string ID = 1;
  string Token = 2;
  Dst Destination = 3;
}

// ================= responses ================= //

