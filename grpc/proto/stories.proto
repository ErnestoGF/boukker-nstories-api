syntax = "proto3";

package stories;

option go_package = "github.com/ErnestoGF/boukker-nstories-api/grpc/go/v2/storiespb";

import "google/protobuf/empty.proto";

import "commons.proto";
import "chapters.proto";


service stories {
  // ================= stories ================= //

  // WriteStory ...
  rpc WriteStory(RequestWriteStory) returns (ResponseID);

  // RemoveStory ...
  rpc RemoveStory(RequestRemoveStory) returns (google.protobuf.Empty);

  // ChangeStoryStatus cambia el estado de la historia y alguno de sus capitulos.
  // 
  // Acciones:
  // * Cambia el estado de la historia y todos sus capitulos si ChaptersID esta vacio.
  // * Cambia el estado de los capitulos q vienen en ChaptersID y si corresponde tambien se cambiaria el de la historia.
  rpc ChangeStoryStatus(RequestChangeStoryStatus) returns (google.protobuf.Empty);

  // ================= chapters ================= //

  // WriteChapter ...
  rpc WriteChapter(RequestWriteChapter) returns (ResponseID);
  
  // RemoveChapter ...
  rpc RemoveChapter(RequestRemoveChapter) returns (google.protobuf.Empty);
}

// ================= requests ================= //

// RequestWriteStory ...
message RequestWriteStory {
  string Title = 2;
  string Author = 3;
  bool IsMy = 4;
  repeated string Tags = 5;
  string CategoryID = 6;
  string LanguageID = 7;
  string TokenCover = 8;
  // StatusType Status = 9;

  repeated string Characters = 12;

  AudienceType Audience = 13;
  CopyrightType Copyright = 14;
  ClasificationType Clasification = 15;
  CommentModerationType CommentsModeration = 16;

  string Description  = 17;
}

// RequestChangeStoryStatus ...
message RequestChangeStoryStatus {
  string ID = 1;
  repeated string ChaptersID = 2;
  StatusType Status = 3;
}

// RequestRemoveStory ...
message RequestRemoveStory{
  string ID = 1;
}

// ================= responses ================= //

